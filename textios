#!/bin/bash

if [[ ! -f ~/.textiosrc ]]
then
	echo 'Cannot read ~/.textiosrc' >&2
	exit 1
fi

. ~/.textiosrc

filters_service='CRITICAL,UNKNOWN'
filters_host='DOWN,UNREACHABLE'
only_hosts=0
show_soft=0
show_acked=0
show_downtime=0
while getopts awhSAD name
do
	case $name in
		a)
			filters_service=
			filters_host=
			show_soft=1
			show_acked=1
			show_downtime=1
			;;
		w)
			filters_service='WARNING,CRITICAL,UNKNOWN'
			;;
		h)
			only_hosts=1
			;;
		S)
			show_soft=1
			;;
		A)
			show_acked=1
			;;
		D)
			show_downtime=1
			;;
	esac
done
shift $((OPTIND - 1))
labels=" $1 "

rm -f /tmp/textios-*

for (( i = 0; i < "${#monitors[@]}"; i += 4 ))
do
	[[ "$labels" != "  " ]] && \
		[[ "${labels// ${monitors[$i]} }" == "$labels" ]] && continue
	printf -v suff '%02d-%s' "$i" "${monitors[$i]}"
	echo "Fetching $suff..."
	url=${monitors[$((i + 2))]}
	case ${monitors[$((i + 1))]} in
		icinga)
			(
				workdir=$(mktemp -d)
				(
					cd "$workdir"
					(
						curl --fail --compressed -nsLk \
							"$url/?style=hostdetail&jsonoutput" \
							>hosts.json ||
							echo "Could not fetch hosts: $url" >&2
					) &
					(
						curl --fail --compressed -nsLk \
							"$url/?host=all&style=detail&jsonoutput" \
							>services.json ||
							echo "Could not fetch services: $url" >&2
					) &
					wait
					textios-json_to_editable \
						"$filters_service" \
						"$filters_host" \
						"$only_hosts" \
						"$show_soft" \
						"$show_acked" \
						"$show_downtime" \
						>/tmp/textios-"$suff"
				)
				rm -Rf "$workdir"
			) &
			;;
		nagios)
			(
				workdir=$(mktemp -d)
				(
					cd "$workdir"
					curl --fail --compressed -nsLk \
						"$url" >status.dat ||
						echo "Could not fetch status.dat: $url" >&2
					textios-nagios_to_json_hosts <status.dat >hosts.json
					textios-nagios_to_json_services <status.dat >services.json
					textios-json_to_editable \
						"$filters_service" \
						"$filters_host" \
						"$only_hosts" \
						"$show_soft" \
						"$show_acked" \
						"$show_downtime" \
						>/tmp/textios-"$suff"
				)
				rm -Rf "$workdir"
			) &
			;;
	esac
done

wait
vim -c 'set tw=0 nowrap' -o /tmp/textios-*

for (( i = 0; i < "${#monitors[@]}"; i += 4 ))
do
	[[ "$labels" != "  " ]] && \
		[[ "${labels// ${monitors[$i]} }" == "$labels" ]] && continue
	printf -v suff '%02d-%s' "$i" "${monitors[$i]}"
	echo "Processing $suff..."
	textios-process_editable "${monitors[$((i + 3))]}" \
		</tmp/textios-"$suff"
done
