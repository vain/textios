#!/usr/bin/env python2
# coding: utf-8

import sys
import re
import datetime

for line in sys.stdin.readlines():
    # An nbsp auftrennen:
    tokens = [i.strip() for i in line.split(' ')]

    cmd = tokens[0]
    host = tokens[1]
    service = tokens[2]

    # Erlaubt:
    #  ack
    #  ack irgendein kommentar
    m = re.search(r'^ack( (.*))?', cmd, re.I)
    if m:
        comment = m.group(2) or 'Acknowledged'

        # TODO: ack host, service, comment
        print host, service, comment

    # Erlaubt:
    #
    #  down
    #  down datum kommentar
    #  down datum uhrzeit kommentar
    #  down uhrzeit kommentar
    #
    # - "datum" defaults to heute.
    # - "uhrzeit" defaults to 12:00.
    # - Uhrzeiten immer mit Stunden und Minuten, beide zweistellig.
    # - "hdown" statt "down" für eine Host-Downtime.
    m = re.search(r'^(h?)down( (\d{4}-\d{2}-\d{2})? ?(\d{2}:\d{2})? ?(.*))?',
                  cmd, re.I)
    if m:
        two_hours_later = datetime.datetime.now() + datetime.timedelta(hours=2)

        host_downtime = False
        if m.group(1) == 'h':
            host_downtime = True

        if not m.group(3) and not m.group(4):
            date = two_hours_later.strftime('%Y-%m-%d')
        elif not m.group(3) and m.group(4):
            date = datetime.datetime.now().strftime('%Y-%m-%d')
        else:
            date = m.group(3)

        if not m.group(4) and not m.group(3):
            time = two_hours_later.strftime('%H:%M') + ':00'
        elif not m.group(4) and m.group(3):
            time = '12:00:00'
        else:
            time = m.group(4) + ':00'

        comment = m.group(5) or 'Scheduled Downtime'

        # TODO: down date, time, comment
        if host_downtime:
            print "*",
        print host, service, date, time, comment

# vim: set et sta ts=4 sw=4 :
