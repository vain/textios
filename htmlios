#!/bin/bash

if [[ ! -f ~/.textiosrc ]]
then
	echo 'Cannot read ~/.textiosrc' >&2
	exit 1
fi

. ~/.textiosrc

hostexcludes=
servicesonly=
servicesexcluded=
statusfilters='WARNING,CRITICAL,UNKNOWN'
output=/tmp/htmlios.htm
csvinput=
csvoutput=
title=
while getopts e:o:E:s:O:c:C:t: name
do
	case $name in
		e)
			hostexcludes=$OPTARG
			;;
		o)
			servicesonly=$OPTARG
			;;
		E)
			servicesexcluded=$OPTARG
			;;
		s)
			statusfilters=$OPTARG
			;;
		O)
			output=$OPTARG
			;;
		c)
			csvinput=$OPTARG
			;;
		C)
			csvoutput=$OPTARG
			;;
		t)
			title=$OPTARG
			;;
	esac
done
shift $((OPTIND - 1))
labels=" $1 "

workdir=$(mktemp -d)
trap 'rm -Rf "$workdir"' EXIT
: > "$workdir"/final.csv

if [[ -n "$csvinput" ]]
then
	cp "$csvinput" "$workdir"/final.csv
else
	for (( i = 0; i < "${#monitors[@]}"; i += 4 ))
	do
		[[ "$labels" != "  " ]] && \
			[[ "${labels// ${monitors[$i]} }" == "$labels" ]] && continue

		curl --fail --compressed -nsLk "${monitors[$((i + 2))]}" >"$workdir"/data
		ret=$?
		if (( ret != 0 ))
		then
			echo "htmlios: Fetching ${monitors[$i]} failed, curl error $ret" >&2
			echo "'${monitors[i]}';'FAILED'" >>"$workdir"/final.csv
			continue
		fi

		if [[ ${monitors[$((i + 1))]} == nagios ]]
		then
			textios-nagios_to_csv -v show_acked=1 \
				<"$workdir"/data >"$workdir"/nagfilter
			mv "$workdir"/{nagfilter,data}
		fi

		sed 1d "$workdir"/data >>"$workdir"/final.csv
	done
fi

if [[ -n "$csvoutput" ]]
then
	cp "$workdir"/final.csv "$csvoutput"
	exit
fi

textios-csv_to_html \
	"$hostexcludes" \
	"$servicesonly" \
	"$servicesexcluded" \
	"$statusfilters" \
	"$title" \
	<"$workdir"/final.csv >"$output"
