#!/usr/bin/env python2
# coding: utf-8

import csv
from string import Template
import sys

html = Template("""<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="refresh" content="10">

    <link rel="stylesheet" type="text/css" href="http://yui.yahooapis.com/2.9.0/build/reset/reset-min.css">
    <link href='http://fonts.googleapis.com/css?family=Oswald' rel='stylesheet' type='text/css'>

    <style type="text/css">
    html {
        background-color: #000000;
        font-family: Oswald;
        height: 100%;
    }
    body { height: 100% }
    body.ok {
        background: #00ff06;
        background: -moz-linear-gradient(top,  #00ff06 0%, #007f00 100%);
        background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#00ff06), color-stop(100%,#007f00));
        background: -webkit-linear-gradient(top,  #00ff06 0%,#007f00 100%);
        background: linear-gradient(to bottom,  #00ff06 0%,#007f00 100%);
    }
    body.warning {
        background: #000000;
        background: -moz-linear-gradient(top,  #000000 0%, #997700 100%);
        background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#000000), color-stop(100%,#997700));
        background: -webkit-linear-gradient(top,  #000000 0%,#997700 100%);
        background: linear-gradient(to bottom,  #000000 0%,#997700 100%);
    }
    body.unknown {
        background: #000000;
        background: -moz-linear-gradient(top,  #000000 0%, #6801b2 100%);
        background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#000000), color-stop(100%,#6801b2));
        background: -webkit-linear-gradient(top,  #000000 0%,#6801b2 100%);
        background: linear-gradient(to bottom,  #000000 0%,#6801b2 100%);
    }
    body.critical {
        background: #000000;
        background: -moz-linear-gradient(top,  #000000 0%, #7f0000 100%);
        background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#000000), color-stop(100%,#7f0000));
        background: -webkit-linear-gradient(top,  #000000 0%,#7f0000 100%);
        background: linear-gradient(to bottom,  #000000 0%,#7f0000 100%);
    }
    table { width: 100% }
    tr { width: 100%; text-shadow: 1px 1px 0px rgba(255, 255, 255, 0.4); }
    tr.warning {
        background: #ffd519;
        background: -moz-linear-gradient(top,  #ffd519 0%, #e5bf16 100%);
        background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#ffd519), color-stop(100%,#e5bf16));
        background: -webkit-linear-gradient(top,  #ffd519 0%,#e5bf16 100%);
        background: linear-gradient(to bottom,  #ffd519 0%,#e5bf16 100%);
    }
    tr.critical {
        background: #ff0000;
        background: -moz-linear-gradient(top,  #ff0000 0%, #d30000 100%);
        background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#ff0000), color-stop(100%,#d30000));
        background: -webkit-linear-gradient(top,  #ff0000 0%,#d30000 100%);
        background: linear-gradient(to bottom,  #ff0000 0%,#d30000 100%);
    }
    tr.unknown {
        background: #ff32ff;
        background: -moz-linear-gradient(top,  #ff32ff 0%, #cc3dcc 100%);
        background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#ff32ff), color-stop(100%,#cc3dcc));
        background: -webkit-linear-gradient(top,  #ff32ff 0%,#cc3dcc 100%);
        background: linear-gradient(to bottom,  #ff32ff 0%,#cc3dcc 100%);
    }
    tr.ok {
        background: #00ff06;
        background: -moz-linear-gradient(top,  #00ff06 0%, #00cc00 100%);
        background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#00ff06), color-stop(100%,#00cc00));
        background: -webkit-linear-gradient(top,  #00ff06 0%,#00cc00 100%);
        background: linear-gradient(to bottom,  #00ff06 0%,#00cc00 100%);
    }
    td {
        font-size: 42px;
        padding-top: 10px;
        padding-bottom: 9px;
        padding-left: 15px;
        padding-right: 10px;
    }
    td.detail { font-size: 24px }
    </style>
</head>
<body class="ok $bodyclasses">
    <table>
$tablerows
    </table>
</body>
</html>
""")

hostexcludes = [i for i in sys.argv[1].split(',') if i != '']
servicesonly = [i for i in sys.argv[2].split(',') if i != '']
statusfilters = [i for i in sys.argv[3].split(',') if i != '']

reader = csv.reader(sys.stdin, delimiter=';', quotechar="'")

bodyclasses = set()
tablerows = ""

for row in reader:
    host = row[0]
    service = row[1]
    status = row[2]
    detail = row[6]

    if hostexcludes and host in hostexcludes:
        continue

    if servicesonly and service not in servicesonly:
        continue

    if statusfilters and status not in statusfilters:
        continue

    bodyclasses.add(status.lower())

    tablerows += (
        '<tr class="{}">'
        '<td class="host">{}</td>'
        '<td class="service">{}</td>'
        '<td class="detail">{}</td>'
        '</tr>\n'
    ).format(
        status.lower(),
        host,
        service,
        detail,
    )

print(html.substitute(
    bodyclasses=" ".join(bodyclasses),
    tablerows=tablerows,
))

# vim: set et sta ts=4 sw=4 :
