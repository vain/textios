.TH HTMLIOS 1 "August 2013" "htmlios" "HTML renderer of textios"
.\" -------------------------------------------------------------------
.SH NAME
htmlios \- render monitoring information as HTML
.\" -------------------------------------------------------------------
.SH SYNOPSIS
\fBhtmlios\fP [\fIOPTION...\fP] [\fILOCATIONS\fP]
.\" -------------------------------------------------------------------
.SH DESCRIPTION
\fBhtmlios\fP is meant to render monitoring information of one or more
Icinga/Nagios instances as HTML files.
.P
\fBhtmlios\fP is a non-interactive tool. It fetches the information
using \fBcurl\fP(1), renders a HTML file and then quits. It supports way
more filtering than \fBtextios\fP(1) does.
.\" -------------------------------------------------------------------
.SH OPTIONS
By default, \fBhtmlios\fP will fetch the informations of all your
locations and renders one single HTML file (\fI/tmp/htmlios.html\fP).
You can alter that behaviour as follows.
.TP
.B \-O \fIFILE\fP
Save HTML output as \fIFILE\fP.
.TP
.B \-C \fIFILE\fP
Instead of creating an HTML file, \fBhtmlios\fP will store intermediate
information in \fIFILE\fP. See the \fBEXAMPLES\fP section and the
\fB\-c\fP parameter.
.TP
.B \-c \fIFILE\fP
Instead of fetching the current information from your monitoring
systems, \fBhtmlios\fP will read the intermediate data as saved by
\fB\-C\fP.
.TP
.B \-t \fITITLE\fP
Create a title area in the HTML file. This is useful if you're
monitoring several locations.
.TP
.B \-e \fIHOST1\fP,\fIHOST2\fP,\fIHOST3\fP,\fI...\fP
This will exclude the given hosts. Use commas to separate them.
.TP
.B \-E \fISERVICE1\fP,\fISERVICE2\fP,\fISERVICE3\fP,\fI...\fP
This will exclude the given services. Use commas to separate them.
.TP
.B \-o \fISERVICE1\fP,\fISERVICE2\fP,\fISERVICE3\fP,\fI...\fP
This will include \fBonly\fP the given services. Use commas to separate
them.
.TP
.B \-s \fISTATUS1\fP,\fISTATUS2\fP,\fISTATUS3\fP,\fI...\fP
This will include \fBonly\fP the given statuses. Use commas to separate
them. Defaults to \fBWARNING,CRITICAL,UNKNOWN\fP.
.P
After these options, you can specify several locations. For example, if
you've configured the locations \(lqffm\(rq, \(lqber\(rq and
\(lqnur\(rq, you'd have to use the following command to only display
information for \(lqffm\(rq and \(lqber\(rq:
.P
.nf
\f(CW
\&	$ htmlios 'ffm ber'
\fP
.fi
.P
Note: The locations must be given as one single argument.
.\" -------------------------------------------------------------------
.SH EXAMPLES
\fBhtmlios\fP is quite flexible. In particular, it allows you to fetch
all information once and render multiple HTML files from it:
.P
.nf
\f(CW
\&	htmlios -C location1.csv location1
\&	htmlios -C location2.csv location2
\&	htmlios -C location3.csv location3
\&
\&	cat location{1,2,3}.csv >all.csv
\&
\&	htmlios -c location1.csv -O location1-everything.html
\&	htmlios -c all.csv -o UPDATES -O all-updates.html
\fP
.fi
.P
You'll most likely want to run \fBhtmlios\fP from \fBcron\fP(1) or in a
loop:
.P
.nf
\f(CW
\&	while sleep 30
\&	do
\&		htmlios ... -O status.new.html
\&		mv status.new.html status.html
\&	done
\fP
.fi
.P
You may wonder about the usage of \fBmv\fP(1). Here's why: \fBhtmlios\fP
includes a refresh command in the HTML header. This means that while
\fBhtmlios\fP is still writing the HTML files, your browser \fBmight\fP
be in the process of refreshing the page. This would lead to a corrupt
page, probably simply an error message in the browser. Thus, we first
render the new file and then rename it. On Linux, this is an atomic
step, so the browser won't complain.
.\" -------------------------------------------------------------------
.SH CONFIGURATION
See \fBtextiosrc\fP(5).
.\" -------------------------------------------------------------------
.SH BUGS
Currently, no bugs are known. If you find one, we invite you to report
it at the GitHub Issue tracker (http://github.com/vain/textios/issues).
.\" -------------------------------------------------------------------
.SH AUTHORS
See the accompanying \fILICENSE\fP file.
.\" -------------------------------------------------------------------
.SH "SEE ALSO"
.BR textiosrc (5),
.BR textios (1),
.BR vim (1),
.BR curl (1)
